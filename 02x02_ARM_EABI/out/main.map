
Memory Configuration

Name             Origin             Length             Attributes
RAM              0x0000000020000000 0x0000000000030000 xrw
FLASH            0x0000000008000000 0x0000000000100000 xr
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD obj/increment.o
                0x0000000020020000                _estack = 0x20020000
                0x0000000000000000                . = 0x0

.text           0x0000000008000000        0x8
 *(.isr_vector)
 *(.text)
 .text          0x0000000008000000        0x8 obj/increment.o
                0x0000000008000000                increment
 *(.text*)
 *(.rodata)
 *(.rodata*)
                0x0000000008000008                _sidata = LOADADDR (.data)

.glue_7         0x0000000008000008        0x0
 .glue_7        0x0000000008000008        0x0 linker stubs

.glue_7t        0x0000000008000008        0x0
 .glue_7t       0x0000000008000008        0x0 linker stubs

.vfp11_veneer   0x0000000008000008        0x0
 .vfp11_veneer  0x0000000008000008        0x0 linker stubs

.v4_bx          0x0000000008000008        0x0
 .v4_bx         0x0000000008000008        0x0 linker stubs

.iplt           0x0000000008000008        0x0
 .iplt          0x0000000008000008        0x0 obj/increment.o

.rel.dyn        0x0000000008000008        0x0
 .rel.iplt      0x0000000008000008        0x0 obj/increment.o

.data           0x0000000020000000        0x0 load address 0x0000000008000008
                0x0000000020000000                . = ALIGN (0x4)
                0x0000000020000000                _sdata = .
 *(.data)
 .data          0x0000000020000000        0x0 obj/increment.o
 *(.data*)
                0x0000000020000000                . = ALIGN (0x4)
                0x0000000020000000                _edata = .

.igot.plt       0x0000000020000000        0x0 load address 0x0000000008000008
 .igot.plt      0x0000000020000000        0x0 obj/increment.o

.bss            0x0000000020000000        0x0 load address 0x0000000008000008
                0x0000000020000000                . = ALIGN (0x4)
                0x0000000020000000                _sbss = .
                0x0000000020000000                __bss_start__ = _sbss
 *(.bss)
 .bss           0x0000000020000000        0x0 obj/increment.o
 *(.bss*)
 *(COMMON)
                0x0000000020000000                . = ALIGN (0x4)
                0x0000000020000000                _ebss = .
                0x0000000020000000                __bss_end__ = _ebss
                0x0000000020000000                _end = .
                0x0000000020000000                PROVIDE (end, .)
OUTPUT(out/main.elf elf32-littlearm)

.debug_info     0x0000000000000000       0x60
 .debug_info    0x0000000000000000       0x60 obj/increment.o

.debug_abbrev   0x0000000000000000       0x59
 .debug_abbrev  0x0000000000000000       0x59 obj/increment.o

.debug_loc      0x0000000000000000       0x21
 .debug_loc     0x0000000000000000       0x21 obj/increment.o

.debug_aranges  0x0000000000000000       0x20
 .debug_aranges
                0x0000000000000000       0x20 obj/increment.o

.debug_line     0x0000000000000000       0x41
 .debug_line    0x0000000000000000       0x41 obj/increment.o

.debug_str      0x0000000000000000      0x110
 .debug_str     0x0000000000000000      0x110 obj/increment.o

.comment        0x0000000000000000       0x33
 .comment       0x0000000000000000       0x33 obj/increment.o
                                         0x34 (size before relaxing)

.ARM.attributes
                0x0000000000000000       0x39
 .ARM.attributes
                0x0000000000000000       0x39 obj/increment.o

.debug_frame    0x0000000000000000       0x20
 .debug_frame   0x0000000000000000       0x20 obj/increment.o
